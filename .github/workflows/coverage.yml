name: Generate and upload code coverage

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.3.0, 2.13.12]
        java: [zulu@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        shell: bash
        run: git config --global core.autocrlf false

      - name: Git checkout (merge)
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - name: Git checkout (PR)
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          # see: https://frontside.com/blog/2020-05-26-github-actions-pull_request/#how-does-pull_request-affect-actionscheckout
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Java (zulu@8)
        if: matrix.java == 'zulu@8'
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 8

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Build and Test
        run: sbt '++${{ matrix.scala }}' clean coverage test 

      - name: Make target directories
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        shell: bash
        run: mkdir -p target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        shell: bash
        run: tar cf targets.tar target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}
          path: targets.tar

      - name: Upload coverage data to coveralls
        run: sbt '++${{ matrix.scala }}' coverageReport coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: Scala ${{ matrix.scala }}
